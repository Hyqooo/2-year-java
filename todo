	GOALS:
		- Program modeling the Solar system
	
	TASK REQUIREMENTS:
		- Display sun and 8 planets of the Solar system(from Mercury to Neptune)

		- Also display main satellite for some planets(moon for Earth, and Phobos and Deimos for Mars)
		and their movements around planets

		- I need to display planets with respect to their sizes also as their orbits and speeds

		- So if we display solar system with proper scale first four planets overlap with each other
		and we need:
			- Biggest scale and possibility for scrolling
			- Visualization with two scales 1. for all planets 2. for first four planets

		- User is allowed to turn on/off names of the planets and their satellites, their orbits and trajectories, and increase or decrease speeds of the bodies in the solar system 
	
	INITIAL THOUGHTS:
		- Each body should contain following properties:
			- Anchor body to spin around(for planets - sun, for satellites - their planet)
			- Radius of orbit(In advanced version I need add eccentricity of the body)
			- Orbital speed
			- Size of the body(Radius)
			- List of attached satellites 
			------------
			GUI characteristics:
			- Color of the body

		- Who will be evaluate position of each body on the screen?
			- Separate block of the program

		- How anchor point would be look like?
			- Just a reqular point on the scene
		
		- I need formula to evaluate how fast body moves around another body

		- If changing time speed could be done with changing speed of the bodies,
		maybe I need separate module for evaluation positions and I will just apply multiplier to each body
			- Multiplier - t << [0; 2]
		- Middle position obviously center of the scene
		- Also position for each body will simplify visual naming(center_pos + radius_of_the_body + epsilon)

		- The sun also has anchor point in the middle of the screen and has raidus of the orbit but it is really small relative to the sizes of the sun

	IMPLEMENTATION:
		- Body class:
			~ Anchor point
			~ Radius of its orbit
			~ Orbital speed
			~ Size of the body(Radius)
			~ List of attached satellites
			~ Name of the body

		- How does it work?
			- MVC

		- I need somehow map real number to pixels

		- Everything is calculated relative to the orbit of the Earth

		Contorller:
			Goal:
				- Manage calculations and properly transmit info to the View
				- Get input from the View and transmit inputted data to the Model 

			Implementation:
				- Transfer data back and forth to the View and to the Model
				- Process input from the user and do actions according to this input
					- Example: if user drags speed multiplier this data sends to the Controller and then Controller sends them to the Model
					- Example: if user presses to show orbits the Controller sends signal to the View to display this orbits
					- Example: if user presses to show names the Controller asks each name of the body taken from the Model  


		View:
			Goal:
				- Display the solar system
				- Get input from the user

			Implementation:
				- Gets input from the user and transmit it to the Controller
				- Display proper bodies according to data that comes from the Controller

		Model:
			Goal:
				- Calculates all movements of the planets and other sky bodies
				- Stores data about planets

			Implementation:
				- Program do forever loop and constantly recalculates positions of the sky bodies
				- Gets input from the Controller and do applies certain characteristics to the speed(because we need only speed multiplier)
				- Send all data to the Controller 


	NUBMERS:
		earth's radius:
			6371.0 km

		angular velocity:
			earth: pi/30
			any planet: X = 60*T/365 => angular_velocity = 2*pi/X

		proportions relative to radius of the earth:
			sun radius: 109 * EARTH_RADIUS
 			mercury radius: 0.3871
			venus radius: 0.7233
			moon radius: 0.0026
			earth radius: 1



		orbits:
			mercury - 57,909,050 km
			venus - 108,208,000 km
			moon - 385,000 km
			earth - 149,598,023 km
			mars - 227,939,200 km




//        mercury = new SkyBody(new Position(0, 0), 100, 0.000004, 88, null, "Mercury");
//        venus = new SkyBody(new Position(0, 0), 100, 0.000004, 225, null, "Venus");
//        moon = new SkyBody(new Position(0, 0), 100, 0.000004, 27, null, "Moon");
//        ArrayList<SkyBody> earth_satellites = new ArrayList<>();
//        earth_satellites.add(moon);
//        mars = new SkyBody(new Position(0, 0), 100, 0.000004, 687, null, "Mars");